# Go
# Build your Go project.
# Add steps that test, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/go

jobs:
- job: Linux
  pool:
    vmImage: 'Ubuntu 16.04'

  variables:
    GOBIN:  '$(GOPATH)/bin' # Go binaries path
    GOROOT: '/usr/local/go1.11' # Go installation path
    GOPATH: '$(system.defaultWorkingDirectory)/gopath' # Go workspace path
    modulePath: '$(GOPATH)/src/github.com/gogs/gogs' # Path to the module's code

  steps:
  - script: |
      mkdir -p '$(GOBIN)'
      mkdir -p '$(GOPATH)/pkg'
      mkdir -p '$(modulePath)'
      shopt -s extglob
      mv !(gopath) '$(modulePath)'
      echo '##vso[task.prependpath]$(GOBIN)'
      echo '##vso[task.prependpath]$(GOROOT)/bin'
    displayName: 'Set up the Go workspace'

  - script: |
      sudo apt-get update -qq
      sudo apt-get install -y libpam-dev
    displayName: 'Install libpam-dev'

  - script: |
      go version
      go get -v -t -d ./...
    workingDirectory: '$(modulePath)'
    displayName: 'Get dependencies'

  - script: |
      go build -v -tags "pam"
    workingDirectory: '$(modulePath)'
    displayName: 'Build'

  - script: |
      go test -v -cover -race ./...
    workingDirectory: '$(modulePath)'
    displayName: 'Run tests'

- job: Mac
  pool:
    vmImage: 'macOS-10.13'

  variables:
    GOBIN:  '$(GOPATH)/bin' # Go binaries path
    GOROOT: '/usr/local/bin/go' # Go installation path
    GOPATH: '$(system.defaultWorkingDirectory)/gopath' # Go workspace path
    modulePath: '$(GOPATH)/src/github.com/gogs/gogs' # Path to the module's code

  steps:
  - script: |
      which go
      mkdir -p '$(GOBIN)'
      mkdir -p '$(GOPATH)/pkg'
      mkdir -p '$(modulePath)'
      shopt -s extglob
      mv !(gopath) '$(modulePath)'
      echo '##vso[task.prependpath]$(GOBIN)'
      echo '##vso[task.prependpath]$(GOROOT)/bin'
    displayName: 'Set up the Go workspace'

  - script: |
      go version
      go get -v -t -d ./...
    workingDirectory: '$(modulePath)'
    displayName: 'Get dependencies'

  - script: |
      go build -v -tags "pam"
    workingDirectory: '$(modulePath)'
    displayName: 'Build'

  - script: |
      go test -v -cover -race ./...
    workingDirectory: '$(modulePath)'
    displayName: 'Run tests'
